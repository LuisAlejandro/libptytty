# ./Makefile.in			-*- Makefile -*-

SHELL = /bin/sh

VERNAME = libpty-0.0

srcdir =	@srcdir@
VPATH =		@srcdir@
.PATH:		@srcdir@

first_rule: all
dummy:

subdirs = src doc
allsubdirs = $(subdirs)

all allbin alldoc tags install:
	@for I in ${subdirs}; do (cd $$I; ${MAKE} $@) || exit 1; done

realclean: clean
	@for I in ${subdirs}; do (cd $$I; ${MAKE} $@) || exit 1; done
	$(RMF) config.h config.status config.log libtool

clean:
	$(RMF) *~ config.cache
	$(RMF) -r autom4te.cache
	@for I in ${subdirs}; do (cd $$I; ${MAKE} $@) || exit 1; done

check: all
	echo "no tests"

cleandir: realclean

# distclean goal is for making a clean source tree, but if you have run
# configure from a different directory, then doesn't destroy all your
# hardly compiled and linked stuff. That's why there is always $(srcdir)/
# In that case most of those commands do nothing, except cleaning *~
# and cleaning source links.
distclean:
	(cd $(srcdir); $(RMF) *~ config.cache config.h config.log config.status libtool)
	@for I in $(allsubdirs); do (cd $$I; $(MAKE) $@) || exit 1; done
	(cd $(srcdir); $(RMF) Makefile)

distdir:
	cd src && $(MAKE) depend
	rm -rf $(VERNAME)
	mkdir $(VERNAME)
	rsync -aR `cat MANIFEST` $(VERNAME)/.

tar.gz: distdir
	tar cvf - $(VERNAME) | gzip -vf9 > $(VERNAME).tar.gz
	rm -rf $(VERNAME)

tar.bz2: distdir
	tar cvf - $(VERNAME) | bzip2 -vf9 > $(VERNAME).tar.bz2
	rm -rf $(VERNAME)

dist: tar.bz2

